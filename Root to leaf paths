/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode * root , string res , vector <string> &ans)
    {
        if(root == NULL)
        {
            
            return ;
        }
        if(root->left == NULL && root->right == NULL)
        {
            res = res +  to_string(root->val) ;  
            ans.push_back(res) ;
            return ;
        }
        helper(root->left , res +   to_string(root->val) + "->" ,ans) ;
        helper(root->right , res  +  to_string(root->val) + "->" , 
        ans) ;
        
        return ;
    }
    vector<string> binaryTreePaths(TreeNode* root) {
        vector <string> ans ; 
        string res = "";
        helper(root , res , ans) ;
        return ans ; 
    }
};
