bool ispossible(vector<int> &stalls, int k , int dif)
{
  vector <int> arr= stalls ; 
  int n = stalls.size() ;
  int i = 0 ; 
  int j = 1; 
  int c = 1 ; 
  while(i <n && j < n)
  {
        if(arr[j] - arr[i]  >= dif)
        {
            c++; 
            i =  j ; 
            j = i + 1 ; 
        }
        else
        {
          j++ ; 
        }
  }
  return c >= k ; 
}


int aggressiveCows(vector<int> &stalls, int k) {
  //    Write your code here.

  int l = 1 ; 
  int res = -1e9  ;
  sort(stalls.begin(),stalls.end()) ; 
  int r  = *max_element(stalls.begin(),stalls.end()) - *min_element(stalls.begin(),stalls.end())  ;
  while( l <= r)
  {
    int mid = (l + r) / 2 ; 
    bool a = ispossible(stalls , k ,mid) ;
   // cout << mid << " " <<  a << endl ;
    if (a) {
      res = max(mid, res);
      l  = mid + 1 ; 

    }
    else{
      r = mid - 1  ; 

    }
  }
  return res ; 
 
}
