#include <vector>
#include <bits/stdc++.h>
int longestIncreasingSubsequence(vector <int> arr , int n){
    
    vector <int> temp ;
    temp.push_back(arr[0]);
    for(int i = 1; i < n ; i++)
    {
        if(arr[i] > temp.back())
        {
            temp.push_back(arr[i]);
        }
        else
        {
           int ind = lower_bound(temp.begin(),temp.end(),arr[i]) - temp.begin();
            temp[ind] = arr[i];
        }
    }
    return temp.size();
}
#include <bits/stdc++.h>
int LDS(vector<int> arr){

    for(int i = 0 ; i < arr.size() ; i++)
    {
      arr[i] = -arr[i] ;
    }
    return   longestIncreasingSubsequence(arr , arr.size() ) ;
   
     // Write your code here.
}
