#include <bits/stdc++.h> 
bool ispalindrome(string &str )
{
    string temp=str;
   reverse(str.begin(),str.end());
   if(temp==str)
      { 
         return true ; 
      } 
    return false ; 
    
}
void helper(string &s , int ind , vector <string> &ans, int n , vector <vector <string> >&res)
{
    if(ind == n )
    {
        res.push_back(ans) ; 
        return ; 
    }
    for(int i = ind ; i < n ; ++i )
    {
       string substring = s.substr(ind ,  i - ind  +  1 ) ;
      //  cout << ind << endl ;
       //cout << substring << endl ;
       if(ispalindrome(substring))
       {
           ans.push_back(substring) ;
           helper(s , i + 1 , ans , n,res) ; 
           ans.pop_back() ;
       }
    }
}
vector<vector<string>> partition(string &s) 
{
    
   vector<vector<string>> res ; 
   vector <string > ans ; 
   int n = s.size();
   helper(s , 0 , ans , n , res) ;
   
   return res ; 
    // Write your code here.
}
