#include <bits/stdc++.h> 
void BFS(int sv  ,  vector <int> adj[] ,  vector <int> &vis , vector <int> &nodes , int n , int m)
{
	queue <int> q ; 
	q.push(sv) ;
	vis[sv] = 1 ;
	while(!q.empty())
	{
		int f = q.front() ; 
		nodes.push_back(f) ;
		q.pop() ; 
		for(auto itr : adj[f] )
		{
                  if (!vis[itr]) {
                    q.push(itr);
					vis[itr] = 1; 
                  }
        }
		 
	}
}
vector<int> countNodes(int n, int m, vector< vector<int> > & edges)
{

	     vector <int> adj[n] ; 
		 for(int i =  0 ; i < edges.size() ; i++)
		 {
			 adj[edges[i][0]].push_back(edges[i][1]) ;
			 adj[edges[i][1]].push_back(edges[i][0]) ;

		 }

	     vector <int> ans(n , 0);

 
	     vector <int> vis(n  , 0);
         for (int i = 0; i < n; i++) {
            vector <int> nodes ;
		   if(vis[i] == false)
           BFS(i, adj, vis, nodes, n, m);

		   for(int i = 0 ; i < nodes.size() ; i++)
		   {
			   ans[nodes[i]] = nodes.size() ; 
		   }

         }
		 return ans ; 

        // Write your code here.
}
