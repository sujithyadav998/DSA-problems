
class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque <int> dq ;
        int n = nums.size() ; 
        vector <int> ans ; 
        int w = 0 ; 
        int ind = 0 ; 
        while(ind < n)
        {
            //out of range maximum popout 
           
            if(!dq.empty() && dq.front() == ind - k )
            {
                dq.pop_front() ;
            }


            //inseting 3 conditions
            
            while(!dq.empty() && nums[ind] >= nums[dq.back()])
            {
                dq.pop_back() ;
            }
            dq.push_back(ind) ;
            if(ind >= k - 1)
            {
                ans.push_back(nums[dq.front()]) ;
            }
                         
           
            ind++ ; 

        }
        return ans ; 


        
    }
};
