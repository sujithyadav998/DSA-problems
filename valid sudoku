class Solution {
public:

    
#include <bits/stdc++.h>
bool cd(vector <int>  &m)
{
    for(int i = 1 ; i < 10 ; i++)
    {
       if(m[i] > 1)
       {
           return true ; 
       }  
    }
    return false ;
}

bool isItSudoku( vector <vector <int> > &matrix) {
    // Write your code here.
    //checking rowa 
   
    for(int i = 0 ; i < 9 ; i++)
    {
        vector <int> m(10  , 0) ; 
        for(int j = 0 ; j < 9 ; j++)
        {
             m[matrix[i][j]]++ ;   
        }
        bool a =  cd(m) ;
        if(a)
        return false ; 
    }

    for(int i = 0 ; i < 9 ; i++)
    {
        vector <int> m(10  , 0) ; 
        for(int j = 0 ; j < 9 ; j++)
        {
             m[matrix[j][i]]++ ;   
        }
        bool a =  cd(m) ;
        if(a)
        return false ; 
    }
     int arr[3] = {0 , 3 , 6} ;
     for(int i = 0 ; i < 3 ; i++)
     {
         for(int j = 0 ; j < 3 ; j++)
         {
             int si = arr[i];
             int sj = arr[j] ; 
              vector <int> m(10 , 0) ; 
             for(int k = si  ; k < si + 3 ; k++)
             {
               for(int l = sj ;   l < sj + 3 ; l++)
               {
                  m[matrix[k][l]]++ ; 
               }   
             }
             bool a = cd(m) ;
             if(a)
             return false ;
         }

     }
     return true ; 




}

    bool isValidSudoku(vector<vector<char>>& board) {
        vector < vector <int > > matrix(9  , vector <int> (9 , 0)) ;
        for(int i = 0 ; i < 9 ; i++) 
        {
            for(int j = 0 ; j < 9 ; j++)
            {
                if(board[i][j] == '.')
                {
                    continue ; 
                }
                matrix[i][j] = board[i][j] - '0' ; 
            }
        }
        return isItSudoku( matrix) ; 
    


        
        
    }
};
